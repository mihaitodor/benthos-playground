# Query GitHub GraphQL API using a GitHub App Installation Token
#
# Details here: https://docs.github.com/en/apps/creating-github-apps/authenticating-with-a-github-app/generating-an-installation-access-token-for-a-github-app
#
# Requires Benthos v4.18.0 or greater.
#
# Env vars:
# - `GITHUB_APP_ID`:               Mandatory
# - `GITHUB_APP_INSTALLATION_ID`:  Mandatory
# - `GITHUB_APP_PRIVATE_KEY_FILE`: Default `./private-key.pem`

input:
  generate:
    count: 0
    mapping: root = ""
    interval: 1s

  processors:
    - mapping: |
        meta app_id = env("GITHUB_APP_ID").or(throw("GITHUB_APP_ID must be set"))
        meta app_installation_id = env("GITHUB_APP_INSTALLATION_ID").or(throw("GITHUB_APP_INSTALLATION_ID must be set"))
        meta private_key_file = env("GITHUB_APP_PRIVATE_KEY").or("./private-key.pem")
    - catch:
        - mapping: root = deleted()

    - mapping: |
        map generate_jwt {
          let private_key = file(@private_key_file)
          let now = now().ts_tz("UTC").ts_unix()

          root = {
            # Issued 60 seconds in the past to allow for clock drift
            "iat": $now - 60,
            "exp": $now + (10 * 60),
            "iss": @app_id,
            "alg": "RS256x"
          }.sign_jwt_rs256($private_key)
        }
        meta jwt_token = "".apply("generate_jwt")

    - log:
        level: DEBUG
        message: |
          JWT token: ${! @jwt_token }

    - branch:
        processors:
          - cache:
              resource: token_cache
              operator: get
              key: installation_token

          - switch:
              - check: errored()
                processors:
                  - catch: []
                  - log:
                      level: DEBUG
                      message: Generating installation token

                  - http:
                      url: https://api.github.com/app/installations/${! @app_installation_id }/access_tokens
                      verb: POST
                      headers:
                        Accept: application/vnd.github+json
                        Authorization: Bearer ${! @jwt_token }
                        X-GitHub-Api-Version: "2022-11-28"
                        Content-Type: application/json
                  - catch:
                      - log:
                          message: |
                            Failed to generate installation token: ${! error() }
                      - mapping: root = deleted()

                  - cache:
                      resource: token_cache
                      operator: set
                      key: installation_token
                      value: ${! json("token") }
                      ttl: ${! json("expires_at").ts_strptime("%Y-%m-%dT%H:%M:%SZ").ts_unix() - now().ts_tz("UTC").ts_unix()}s
                  - mapping: |
                      root = this.token

        result_map: |
          meta installation_token = content()

    - mapping: |
        # Execute a sample query
        root.query = """
          query {
            viewer {
              login
            }
          }
        """

    - http:
        url: https://api.github.com/graphql
        verb: POST
        headers:
          Authorization: Bearer ${! @installation_token }
          Content-Type: application/json

    - catch:
        - log:
            message: |
              Failed to query the GraphQL API: ${! error() }
        - mapping: root = deleted()

output:
  stdout: {}

cache_resources:
  - label: token_cache
    memory: {}
